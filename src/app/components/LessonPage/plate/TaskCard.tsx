'use client';

import React from 'react';
import Image from 'next/image';
import { cn } from '@udecode/cn';
import { useParams, useRouter } from 'next/navigation';
import { TaskData } from '~/server/api/routers/tasks';
import Link from 'next/link';
import { InfoPopover } from '../../shared/InfoPopover';
export interface TaskCardProps {
  task: TaskData;
  id: string;
  loading?: boolean;
  // Hero section
  updateDate?: string;
  heroImageSrc?: string;
  heroName?: string;
  heroTagline?: string;

  // Task details
  labels?: string[];
  title?: string;
  description?: string;

  // Stats
  completionCount?: string;
  rating?: string;

  regularTasksSolved?: boolean;
  advancedTasksSolved?: boolean;

  // Actions
  onExecute?: () => void;
}

export const TaskNavigation = ({ labels }: { labels: string[] }) => {
  return (
    <div className="flex flex-row items-center gap-2">
      <svg
        width="16"
        height="16"
        viewBox="0 0 16 16"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        className="h-4 w-4"
      >
        <path
          d="M10.7959 1.33594H5.20927C2.7826 1.33594 1.33594 2.7826 1.33594 5.20927V10.7893C1.33594 13.2226 2.7826 14.6693 5.20927 14.6693H10.7893C13.2159 14.6693 14.6626 13.2226 14.6626 10.7959V5.20927C14.6693 2.7826 13.2226 1.33594 10.7959 1.33594ZM6.75594 9.66927C6.94927 9.8626 6.94927 10.1826 6.75594 10.3759C6.65594 10.4759 6.52927 10.5226 6.4026 10.5226C6.27594 10.5226 6.14927 10.4759 6.04927 10.3759L4.38927 8.71594C3.99594 8.3226 3.99594 7.68927 4.38927 7.29594L6.04927 5.63594C6.2426 5.4426 6.5626 5.4426 6.75594 5.63594C6.94927 5.82927 6.94927 6.14927 6.75594 6.3426L5.09594 8.0026L6.75594 9.66927ZM11.6159 8.70927L9.95594 10.3693C9.85594 10.4693 9.72927 10.5159 9.6026 10.5159C9.47594 10.5159 9.34927 10.4693 9.24927 10.3693C9.05594 10.1759 9.05594 9.85594 9.24927 9.6626L10.9093 8.0026L9.24927 6.33594C9.05594 6.1426 9.05594 5.8226 9.24927 5.62927C9.4426 5.43594 9.7626 5.43594 9.95594 5.62927L11.6159 7.28927C12.0093 7.6826 12.0093 8.3226 11.6159 8.70927Z"
          fill="#F2F2F2"
        />
      </svg>
      <div className="flex">
        {labels.map((x, i) => (
          <React.Fragment key={i}>
            <div className="text-secondary/50 text-xs">{x}</div>
            {i !== labels.length - 1 && (
              <div className="flex items-center justify-center px-2">
                <div className="bg-secondary h-1 w-1 rounded-full opacity-50"></div>
              </div>
            )}
          </React.Fragment>
        ))}
      </div>
    </div>
  );
};

export function TaskStatusBadge({
  status,
  className,
}: {
  status: 'available' | 'in-progress' | 'completed';
  className?: string;
}) {
  return (
    <>
      {status == 'available' ? (
        <div
          className={cn(
            'flex cursor-default flex-row gap-1 rounded-[0.4167vw] bg-[#33CF8E]/10 px-3.5 py-2',
            className
          )}
        >
          <svg
            width="16"
            height="16"
            viewBox="0 0 16 16"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
            className="h-4 w-4"
          >
            <path
              d="M11.5114 8.1899L10.7997 7.47823C10.6306 7.3324 10.5314 7.11656 10.5256 6.8774C10.5139 6.6149 10.6189 6.3524 10.8114 6.1599L11.5114 5.4599C12.1181 4.85323 12.3456 4.2699 12.1531 3.80906C11.9664 3.35406 11.3889 3.10323 10.5372 3.10323H4.44141V2.60156C4.44141 2.3624 4.24307 2.16406 4.00391 2.16406C3.76474 2.16406 3.56641 2.3624 3.56641 2.60156V13.3932C3.56641 13.6324 3.76474 13.8307 4.00391 13.8307C4.24307 13.8307 4.44141 13.6324 4.44141 13.3932V10.5466H10.5372C11.3772 10.5466 11.9431 10.2899 12.1356 9.82906C12.3281 9.36823 12.1064 8.79073 11.5114 8.1899Z"
              fill="#33CF8E"
            />
          </svg>
          <span className="text-xs leading-4 text-[#33CF8E]">Доступна</span>
        </div>
      ) : status == 'in-progress' ? (
        <div
          className={cn(
            'flex cursor-default flex-row gap-1 rounded-[0.4167vw] bg-[#195AF4]/10 px-3.5 py-2',
            className
          )}
        >
          <svg
            width="16"
            height="16"
            viewBox="0 0 16 16"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
            className="h-4 w-4"
          >
            <path
              d="M7.9974 14.2682C4.53823 14.2682 1.72656 11.4566 1.72656 7.9974C1.72656 4.53823 4.53823 1.72656 7.9974 1.72656C11.4566 1.72656 14.2682 4.53823 14.2682 7.9974C14.2682 11.4566 11.4566 14.2682 7.9974 14.2682ZM7.9974 2.60156C5.0224 2.60156 2.60156 5.0224 2.60156 7.9974C2.60156 10.9724 5.0224 13.3932 7.9974 13.3932C10.9724 13.3932 13.3932 10.9724 13.3932 7.9974C13.3932 5.0224 10.9724 2.60156 7.9974 2.60156Z"
              fill="#195AF4"
            />
            <path
              d="M10.1671 10.2945C10.0913 10.2945 10.0155 10.277 9.94547 10.2303L8.13713 9.15115C7.68797 8.88281 7.35547 8.29365 7.35547 7.77448V5.38281C7.35547 5.14365 7.5538 4.94531 7.79297 4.94531C8.03214 4.94531 8.23047 5.14365 8.23047 5.38281V7.77448C8.23047 7.98448 8.40547 8.29365 8.5863 8.39865L10.3946 9.47781C10.6046 9.60031 10.6688 9.86865 10.5463 10.0786C10.4588 10.2186 10.313 10.2945 10.1671 10.2945Z"
              fill="#195AF4"
            />
          </svg>

          <span className="text-xs leading-4 text-[#195AF4]">В процессе</span>
        </div>
      ) : (
        <svg
          width="109"
          height="32"
          viewBox="0 0 109 32"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
          className={cn('h-8.0 w-27.25', className)}
        >
          <rect
            width="109"
            height="32"
            rx="8"
            fill="#33CF8E"
            fill-opacity="0.1"
          />
          <path
            d="M16.3594 16.5184L18.4394 18.5984L23.6394 13.3984"
            stroke="#33CF8E"
            stroke-width="1.2"
            stroke-linecap="round"
            stroke-linejoin="round"
          />
          <path
            d="M36.0312 16.0098H33.8691L33.8574 15.1016H35.8203C36.1445 15.1016 36.4277 15.0469 36.6699 14.9375C36.9121 14.8281 37.0996 14.6719 37.2324 14.4688C37.3691 14.2617 37.4375 14.0156 37.4375 13.7305C37.4375 13.418 37.377 13.1641 37.2559 12.9688C37.1387 12.7695 36.957 12.625 36.7109 12.5352C36.4688 12.4414 36.1602 12.3945 35.7852 12.3945H34.1211V20H32.9902V11.4688H35.7852C36.2227 11.4688 36.6133 11.5137 36.957 11.6035C37.3008 11.6895 37.5918 11.8262 37.8301 12.0137C38.0723 12.1973 38.2559 12.4316 38.3809 12.7168C38.5059 13.002 38.5684 13.3438 38.5684 13.7422C38.5684 14.0938 38.4785 14.4121 38.2988 14.6973C38.1191 14.9785 37.8691 15.209 37.5488 15.3887C37.2324 15.5684 36.8613 15.6836 36.4355 15.7344L36.0312 16.0098ZM35.9785 20H33.4238L34.0625 19.0801H35.9785C36.3379 19.0801 36.6426 19.0176 36.8926 18.8926C37.1465 18.7676 37.3398 18.5918 37.4727 18.3652C37.6055 18.1348 37.6719 17.8633 37.6719 17.5508C37.6719 17.2344 37.6152 16.9609 37.502 16.7305C37.3887 16.5 37.2109 16.3223 36.9688 16.1973C36.7266 16.0723 36.4141 16.0098 36.0312 16.0098H34.4199L34.4316 15.1016H36.6348L36.875 15.4297C37.2852 15.4648 37.6328 15.582 37.918 15.7812C38.2031 15.9766 38.4199 16.2266 38.5684 16.5312C38.7207 16.8359 38.7969 17.1719 38.7969 17.5391C38.7969 18.0703 38.6797 18.5195 38.4453 18.8867C38.2148 19.25 37.8887 19.5273 37.4668 19.7188C37.0449 19.9062 36.5488 20 35.9785 20ZM41.1934 15.8398H43.0977C43.6094 15.8398 44.041 15.9297 44.3926 16.1094C44.7441 16.2852 45.0098 16.5293 45.1895 16.8418C45.373 17.1504 45.4648 17.502 45.4648 17.8965C45.4648 18.1895 45.4141 18.4648 45.3125 18.7227C45.2109 18.9766 45.0586 19.1992 44.8555 19.3906C44.6562 19.582 44.4082 19.7324 44.1113 19.8418C43.8184 19.9473 43.4805 20 43.0977 20H40.4023V13.6602H41.4863V19.1094H43.0977C43.4102 19.1094 43.6602 19.0527 43.8477 18.9395C44.0352 18.8262 44.1699 18.6797 44.252 18.5C44.334 18.3203 44.375 18.1328 44.375 17.9375C44.375 17.7461 44.334 17.5586 44.252 17.375C44.1699 17.1914 44.0352 17.0391 43.8477 16.918C43.6602 16.793 43.4102 16.7305 43.0977 16.7305H41.1934V15.8398ZM47.7207 13.6602V20H46.6367V13.6602H47.7207ZM53.8438 13.6602V14.5566H50.6387V13.6602H53.8438ZM50.7969 13.6602V20H49.7129V13.6602H50.7969ZM54.8047 13.6602V20H53.7148V13.6602H54.8047ZM56.2578 16.9004V16.7656C56.2578 16.3086 56.3242 15.8848 56.457 15.4941C56.5898 15.0996 56.7812 14.7578 57.0312 14.4688C57.2812 14.1758 57.584 13.9492 57.9395 13.7891C58.2949 13.625 58.6934 13.543 59.1348 13.543C59.5801 13.543 59.9805 13.625 60.3359 13.7891C60.6953 13.9492 61 14.1758 61.25 14.4688C61.5039 14.7578 61.6973 15.0996 61.8301 15.4941C61.9629 15.8848 62.0293 16.3086 62.0293 16.7656V16.9004C62.0293 17.3574 61.9629 17.7812 61.8301 18.1719C61.6973 18.5625 61.5039 18.9043 61.25 19.1973C61 19.4863 60.6973 19.7129 60.3418 19.877C59.9902 20.0371 59.5918 20.1172 59.1465 20.1172C58.7012 20.1172 58.3008 20.0371 57.9453 19.877C57.5898 19.7129 57.2852 19.4863 57.0312 19.1973C56.7812 18.9043 56.5898 18.5625 56.457 18.1719C56.3242 17.7812 56.2578 17.3574 56.2578 16.9004ZM57.3418 16.7656V16.9004C57.3418 17.2168 57.3789 17.5156 57.4531 17.7969C57.5273 18.0742 57.6387 18.3203 57.7871 18.5352C57.9395 18.75 58.1289 18.9199 58.3555 19.0449C58.582 19.166 58.8457 19.2266 59.1465 19.2266C59.4434 19.2266 59.7031 19.166 59.9258 19.0449C60.1523 18.9199 60.3398 18.75 60.4883 18.5352C60.6367 18.3203 60.748 18.0742 60.8223 17.7969C60.9004 17.5156 60.9395 17.2168 60.9395 16.9004V16.7656C60.9395 16.4531 60.9004 16.1582 60.8223 15.8809C60.748 15.5996 60.6348 15.3516 60.4824 15.1367C60.334 14.918 60.1465 14.7461 59.9199 14.6211C59.6973 14.4961 59.4355 14.4336 59.1348 14.4336C58.8379 14.4336 58.5762 14.4961 58.3496 14.6211C58.127 14.7461 57.9395 14.918 57.7871 15.1367C57.6387 15.3516 57.5273 15.5996 57.4531 15.8809C57.3789 16.1582 57.3418 16.4531 57.3418 16.7656ZM67.5312 13.6602V14.5566H64.4668V13.6602H67.5312ZM68.4863 13.6602V20H67.4023V13.6602H68.4863ZM64.2031 13.6602H65.293L65.1289 16.7188C65.1016 17.1914 65.0566 17.6094 64.9941 17.9727C64.9355 18.332 64.8535 18.6406 64.748 18.8984C64.6465 19.1562 64.5176 19.3672 64.3613 19.5312C64.209 19.6914 64.0254 19.8105 63.8105 19.8887C63.5957 19.9629 63.3477 20 63.0664 20H62.7266V19.0449L62.9609 19.0273C63.1289 19.0156 63.2715 18.9766 63.3887 18.9102C63.5098 18.8438 63.6113 18.7461 63.6934 18.6172C63.7754 18.4844 63.8418 18.3145 63.8926 18.1074C63.9473 17.9004 63.9883 17.6543 64.0156 17.3691C64.0469 17.084 64.0703 16.752 64.0859 16.373L64.2031 13.6602ZM74.5332 16.4082V17.2871H71.1816V16.4082H74.5332ZM71.4102 13.6602V20H70.3262V13.6602H71.4102ZM75.4121 13.6602V20H74.3223V13.6602H75.4121ZM79.7891 20.1172C79.3477 20.1172 78.9473 20.043 78.5879 19.8945C78.2324 19.7422 77.9258 19.5293 77.668 19.2559C77.4141 18.9824 77.2188 18.6582 77.082 18.2832C76.9453 17.9082 76.877 17.498 76.877 17.0527V16.8066C76.877 16.291 76.9531 15.832 77.1055 15.4297C77.2578 15.0234 77.4648 14.6797 77.7266 14.3984C77.9883 14.1172 78.2852 13.9043 78.6172 13.7598C78.9492 13.6152 79.293 13.543 79.6484 13.543C80.1016 13.543 80.4922 13.6211 80.8203 13.7773C81.1523 13.9336 81.4238 14.1523 81.6348 14.4336C81.8457 14.7109 82.002 15.0391 82.1035 15.418C82.2051 15.793 82.2559 16.2031 82.2559 16.6484V17.1348H77.5215V16.25H81.1719V16.168C81.1562 15.8867 81.0977 15.6133 80.9961 15.3477C80.8984 15.082 80.7422 14.8633 80.5273 14.6914C80.3125 14.5195 80.0195 14.4336 79.6484 14.4336C79.4023 14.4336 79.1758 14.4863 78.9688 14.5918C78.7617 14.6934 78.584 14.8457 78.4355 15.0488C78.2871 15.252 78.1719 15.5 78.0898 15.793C78.0078 16.0859 77.9668 16.4238 77.9668 16.8066V17.0527C77.9668 17.3535 78.0078 17.6367 78.0898 17.9023C78.1758 18.1641 78.2988 18.3945 78.459 18.5938C78.623 18.793 78.8203 18.9492 79.0508 19.0625C79.2852 19.1758 79.5508 19.2324 79.8477 19.2324C80.2305 19.2324 80.5547 19.1543 80.8203 18.998C81.0859 18.8418 81.3184 18.6328 81.5176 18.3711L82.1738 18.8926C82.0371 19.0996 81.8633 19.2969 81.6523 19.4844C81.4414 19.6719 81.1816 19.8242 80.873 19.9414C80.5684 20.0586 80.207 20.1172 79.7891 20.1172ZM87.8223 16.4082V17.2871H84.4707V16.4082H87.8223ZM84.6992 13.6602V20H83.6152V13.6602H84.6992ZM88.7012 13.6602V20H87.6113V13.6602H88.7012ZM94.1855 18.916V15.6523C94.1855 15.4023 94.1348 15.1855 94.0332 15.002C93.9355 14.8145 93.7871 14.6699 93.5879 14.5684C93.3887 14.4668 93.1426 14.416 92.8496 14.416C92.5762 14.416 92.3359 14.4629 92.1289 14.5566C91.9258 14.6504 91.7656 14.7734 91.6484 14.9258C91.5352 15.0781 91.4785 15.2422 91.4785 15.418H90.3945C90.3945 15.1914 90.4531 14.9668 90.5703 14.7441C90.6875 14.5215 90.8555 14.3203 91.0742 14.1406C91.2969 13.957 91.5625 13.8125 91.8711 13.707C92.1836 13.5977 92.5312 13.543 92.9141 13.543C93.375 13.543 93.7812 13.6211 94.1328 13.7773C94.4883 13.9336 94.7656 14.1699 94.9648 14.4863C95.168 14.7988 95.2695 15.1914 95.2695 15.6641V18.6172C95.2695 18.8281 95.2871 19.0527 95.3223 19.291C95.3613 19.5293 95.418 19.7344 95.4922 19.9062V20H94.3613C94.3066 19.875 94.2637 19.709 94.2324 19.502C94.2012 19.291 94.1855 19.0957 94.1855 18.916ZM94.373 16.1562L94.3848 16.918H93.2891C92.9805 16.918 92.7051 16.9434 92.4629 16.9941C92.2207 17.041 92.0176 17.1133 91.8535 17.2109C91.6895 17.3086 91.5645 17.4316 91.4785 17.5801C91.3926 17.7246 91.3496 17.8945 91.3496 18.0898C91.3496 18.2891 91.3945 18.4707 91.4844 18.6348C91.5742 18.7988 91.709 18.9297 91.8887 19.0273C92.0723 19.1211 92.2969 19.168 92.5625 19.168C92.8945 19.168 93.1875 19.0977 93.4414 18.957C93.6953 18.8164 93.8965 18.6445 94.0449 18.4414C94.1973 18.2383 94.2793 18.041 94.291 17.8496L94.7539 18.3711C94.7266 18.5352 94.6523 18.7168 94.5312 18.916C94.4102 19.1152 94.248 19.3066 94.0449 19.4902C93.8457 19.6699 93.6074 19.8203 93.3301 19.9414C93.0566 20.0586 92.748 20.1172 92.4043 20.1172C91.9746 20.1172 91.5977 20.0332 91.2734 19.8652C90.9531 19.6973 90.7031 19.4727 90.5234 19.1914C90.3477 18.9062 90.2598 18.5879 90.2598 18.2363C90.2598 17.8965 90.3262 17.5977 90.459 17.3398C90.5918 17.0781 90.7832 16.8613 91.0332 16.6895C91.2832 16.5137 91.584 16.3809 91.9355 16.291C92.2871 16.2012 92.6797 16.1562 93.1133 16.1562H94.373Z"
            fill="#33CF8E"
          />
        </svg>
      )}
    </>
  );
}

export function MobileTaskStatusBadge({
  status,
  className,
}: {
  status: 'available' | 'in-progress' | 'completed';
  className?: string;
}) {
  return (
    <>
      {status == 'available' ? (
        <div className="flex items-center gap-1">
          <svg
            width="16"
            height="16"
            viewBox="0 0 16 16"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
            className="h-4 w-4"
          >
            <path
              d="M11.5114 8.1899L10.7997 7.47823C10.6306 7.3324 10.5314 7.11656 10.5256 6.8774C10.5139 6.6149 10.6189 6.3524 10.8114 6.1599L11.5114 5.4599C12.1181 4.85323 12.3456 4.2699 12.1531 3.80906C11.9664 3.35406 11.3889 3.10323 10.5372 3.10323H4.44141V2.60156C4.44141 2.3624 4.24307 2.16406 4.00391 2.16406C3.76474 2.16406 3.56641 2.3624 3.56641 2.60156V13.3932C3.56641 13.6324 3.76474 13.8307 4.00391 13.8307C4.24307 13.8307 4.44141 13.6324 4.44141 13.3932V10.5466H10.5372C11.3772 10.5466 11.9431 10.2899 12.1356 9.82906C12.3281 9.36823 12.1064 8.79073 11.5114 8.1899Z"
              fill="#33CF8E"
            />
          </svg>
          <span className="text-success text-xs">Доступна</span>
        </div>
      ) : status == 'in-progress' ? (
        <div className="flex items-center gap-1">
          <svg
            width="17"
            height="16"
            viewBox="0 0 17 16"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
            className="h-4 w-4"
          >
            <path
              d="M8.4974 14.2682C5.03823 14.2682 2.22656 11.4566 2.22656 7.9974C2.22656 4.53823 5.03823 1.72656 8.4974 1.72656C11.9566 1.72656 14.7682 4.53823 14.7682 7.9974C14.7682 11.4566 11.9566 14.2682 8.4974 14.2682ZM8.4974 2.60156C5.5224 2.60156 3.10156 5.0224 3.10156 7.9974C3.10156 10.9724 5.5224 13.3932 8.4974 13.3932C11.4724 13.3932 13.8932 10.9724 13.8932 7.9974C13.8932 5.0224 11.4724 2.60156 8.4974 2.60156Z"
              fill="#195AF4"
            />
            <path
              d="M10.6632 10.2945C10.5874 10.2945 10.5116 10.277 10.4416 10.2303L8.63323 9.15115C8.18406 8.88281 7.85156 8.29365 7.85156 7.77448V5.38281C7.85156 5.14365 8.0499 4.94531 8.28906 4.94531C8.52823 4.94531 8.72656 5.14365 8.72656 5.38281V7.77448C8.72656 7.98448 8.90156 8.29365 9.0824 8.39865L10.8907 9.47781C11.1007 9.60031 11.1649 9.86865 11.0424 10.0786C10.9549 10.2186 10.8091 10.2945 10.6632 10.2945Z"
              fill="#195AF4"
            />
          </svg>

          <span className="text-xs text-[#195AF4]">В процессе</span>
        </div>
      ) : (
        <div className="flex items-center gap-1">
          <svg
            width="16"
            height="16"
            viewBox="0 0 16 16"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M4.35938 8.51844L6.43937 10.5984L11.6394 5.39844"
              stroke="#33CF8E"
              stroke-width="1.2"
              stroke-linecap="round"
              stroke-linejoin="round"
            />
          </svg>

          <span className="text-success text-xs">Выполнена</span>
        </div>
      )}
    </>
  );
}

export function TaskCard({
  task,
  loading,
  updateDate = '',
  heroImageSrc = '/heroes/Alex.png',
  heroName = 'Алекс',
  heroTagline = 'Реши задачу за нашего героя!',
  labels = [],
  title = 'Без названия',
  description = '',
  completionCount = '0',
  rating = '0',
  onExecute,
}: TaskCardProps) {
  const { courseId } = useParams();

  const regularTasksSolved = task?.status == 'completed';
  const advancedTasksSolved = regularTasksSolved && task?.advancedTasksSolved;

  return (
    <div
      className={cn(
        'bg-muted border-accent relative -mx-5 flex h-auto w-auto flex-col border-y sm:-mx-16 sm:h-83 sm:w-[calc(100%*var(--spacing)*32)] sm:flex-row'
      )}
    >
      {loading ? (
        <div className="flex h-full w-full items-center justify-center">
          <div className="flex flex-col items-center gap-4">
            <div className="border-primary h-16 w-16 animate-spin rounded-full border-t-2 border-b-2"></div>
            <p className="text-lg font-medium text-gray-600">Loading...</p>
          </div>
        </div>
      ) : (
        <>
          <div className="shrink-0 bg-[#01050D] sm:w-83">
            <div className="flex h-full flex-col gap-8 bg-[url('/images/grids/task-grid.svg')] bg-contain bg-bottom p-8 sm:gap-0">
              <div className="text-secondary/50 flex flex-row justify-between text-xs">
                <span>Обновление задачи</span>
                <div className="flex flex-row items-center gap-1">
                  <div className="bg-success h-1 w-1 rounded-full" />
                  <span className="text-foreground text-xs">{updateDate}</span>
                </div>
              </div>

              <div className="relative mt-auto flex flex-row items-center gap-5 sm:flex-col sm:gap-0">
                <div className="relative">
                  <Image
                    src={heroImageSrc}
                    alt={heroName}
                    width={110}
                    height={110}
                    className="h-12 w-12 sm:h-27.5 sm:w-27.5"
                  />
                  <svg
                    width="20"
                    height="20"
                    viewBox="0 0 20 20"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg"
                    className="absolute bottom-0 left-1/2 h-5 w-5 -translate-x-[calc(50%-var(--spacing)*6.25)]"
                  >
                    <path
                      d="M19.5562 8.74031L18.1961 7.16071C17.9361 6.86079 17.7261 6.30093 17.7261 5.90103V4.20145C17.7261 3.14171 16.856 2.27193 15.796 2.27193H14.0959C13.7059 2.27193 13.1358 2.06198 12.8358 1.80205L11.2557 0.442389C10.5657 -0.147463 9.43559 -0.147463 8.73554 0.442389L7.16544 1.81205C6.86543 2.06198 6.29539 2.27193 5.90537 2.27193H4.17526C3.11519 2.27193 2.24514 3.14171 2.24514 4.20145V5.91102C2.24514 6.30092 2.03513 6.86079 1.78511 7.16071L0.435027 8.75031C-0.145009 9.44014 -0.145009 10.5599 0.435027 11.2497L1.78511 12.8393C2.03513 13.1392 2.24514 13.6991 2.24514 14.089V15.7985C2.24514 16.8583 3.11519 17.7281 4.17526 17.7281H5.90537C6.29539 17.7281 6.86543 17.938 7.16544 18.198L8.74554 19.5576C9.43559 20.1475 10.5657 20.1475 11.2657 19.5576L12.8458 18.198C13.1458 17.938 13.7059 17.7281 14.1059 17.7281H15.806C16.866 17.7281 17.7361 16.8583 17.7361 15.7985V14.099C17.7361 13.7091 17.9461 13.1392 18.2061 12.8393L19.5662 11.2597C20.1463 10.5699 20.1463 9.43014 19.5562 8.74031Z"
                      fill="#010101"
                    />
                    <ellipse
                      cx="10.5508"
                      cy="10.5531"
                      rx="5"
                      ry="4.99844"
                      fill="#F2F2F2"
                    />
                    <path
                      d="M17.433 9.02068L16.3752 7.7921C16.173 7.55882 16.0096 7.12338 16.0096 6.81234V5.49045C16.0096 4.66621 15.3329 3.98971 14.5084 3.98971H13.1861C12.8828 3.98971 12.4394 3.82642 12.2061 3.62425L10.9771 2.56674C10.4404 2.10796 9.56144 2.10796 9.01697 2.56674L7.79578 3.63203C7.56243 3.82642 7.11907 3.98971 6.81572 3.98971H5.47008C4.64558 3.98971 3.96888 4.66621 3.96888 5.49045V6.82012C3.96888 7.12337 3.80553 7.55882 3.61108 7.7921L2.56101 9.02845C2.10987 9.56499 2.10987 10.4359 2.56101 10.9724L3.61108 12.2088C3.80553 12.442 3.96888 12.8775 3.96888 13.1807V14.5104C3.96888 15.3347 4.64558 16.0112 5.47008 16.0112H6.81572C7.11907 16.0112 7.56243 16.1744 7.79578 16.3766L9.02474 17.4341C9.56144 17.8929 10.4404 17.8929 10.9849 17.4341L12.2138 16.3766C12.4472 16.1744 12.8828 16.0112 13.1939 16.0112H14.5162C15.3407 16.0112 16.0174 15.3347 16.0174 14.5104V13.1885C16.0174 12.8853 16.1807 12.442 16.383 12.2088L17.4408 10.9802C17.892 10.4437 17.892 9.55721 17.433 9.02068ZM13.2328 8.5308L9.47588 12.2865C9.36699 12.3954 9.2192 12.4576 9.06364 12.4576C8.90807 12.4576 8.76028 12.3954 8.65139 12.2865L6.76905 10.4048C6.54348 10.1793 6.54348 9.80604 6.76905 9.58054C6.99462 9.35504 7.36798 9.35504 7.59354 9.58054L9.06364 11.0502L12.4083 7.70656C12.6339 7.48106 13.0072 7.48106 13.2328 7.70656C13.4584 7.93206 13.4584 8.3053 13.2328 8.5308Z"
                      fill="#195AF4"
                    />
                  </svg>
                </div>

                <div className="flex flex-col gap-2.5 sm:items-center sm:pt-10">
                  <div className="flex flex-row items-center gap-2">
                    <span className="text-xl leading-6">{heroName}</span>
                    <span className="font-delight border-accent rounded-[100px] border-[0.5px] px-3 pt-1 pb-1.25 text-xs leading-3.75">
                      BF heroes
                    </span>
                  </div>
                  <span className="text-secondary text-xs">{heroTagline}</span>
                </div>
              </div>
            </div>
          </div>
          <div className="flex w-full flex-col p-5 sm:p-8">
            <div className="flex flex-row justify-between pb-8">
              <TaskNavigation labels={labels} />

              <div className="flex flex-row items-center gap-2">
                <InfoPopover
                  title="Выполнение задач"
                  content={`1. Синяя галочка — обозначает, что все основные задачи или тесты успешно выполнены.
                    2. Оранжевая галочка — указывает на то, что выполнены сложные задачи или тесты.`}
                  icon={
                    <div
                      className={cn(
                        'border-primary/50 rounded-[8px] border-[calc(0.25*var(--spacing))] px-2 py-1.25 sm:rounded-[0.4167vw] sm:px-3.25',
                        regularTasksSolved
                          ? 'bg-primary cursor-pointer'
                          : 'hover:bg-primary/10 cursor-pointer'
                      )}
                    >
                      <svg
                        width="20"
                        height="20"
                        viewBox="0 0 20 20"
                        fill="none"
                        xmlns="http://www.w3.org/2000/svg"
                        className="h-5 w-5"
                      >
                        <path
                          d="M5.44922 10.65L8.04922 13.25L14.5492 6.75"
                          stroke="#195AF4"
                          stroke-width="1.5"
                          stroke-linecap="round"
                          stroke-linejoin="round"
                          className={cn(regularTasksSolved && 'stroke-white')}
                        />
                      </svg>
                    </div>
                  }
                />
                <InfoPopover
                  title="Выполнение задач"
                  content={`1. Синяя галочка — обозначает, что все основные задачи или тесты успешно выполнены.
                    2. Оранжевая галочка — указывает на то, что выполнены сложные задачи или тесты.`}
                  icon={
                    <div
                      className={cn(
                        'rounded-[8px] border-[calc(0.25*var(--spacing))] border-[#F48E19]/50 px-2 py-1.25 sm:rounded-[0.4167vw] sm:px-3.25',
                        advancedTasksSolved
                          ? 'cursor-pointer bg-[#F48E19]'
                          : 'cursor-pointer hover:bg-[#F48E19]/10'
                      )}
                    >
                      <svg
                        width="20"
                        height="20"
                        viewBox="0 0 20 20"
                        fill="none"
                        xmlns="http://www.w3.org/2000/svg"
                        className="h-5 w-5"
                      >
                        <g clip-path="url(#clip0_3557_29169)">
                          <path
                            d="M5.44922 10.65L8.04922 13.25L14.5492 6.75"
                            stroke="#F48E19"
                            stroke-width="1.5"
                            stroke-linecap="round"
                            stroke-linejoin="round"
                            className={cn(
                              advancedTasksSolved && 'stroke-foreground'
                            )}
                          />
                          <circle
                            cx="17"
                            cy="5.5"
                            r="4.5"
                            fill="#0F1217"
                            className={cn(
                              advancedTasksSolved && 'fill-[#F48E19]'
                            )}
                          />
                          <path
                            d="M14.8662 7.72559L16.2402 5.83887L14.1758 5.22363L14.4971 4.19824L16.5615 4.95703L16.5 2.60547H17.5391L17.4707 4.99805L19.5078 4.23926L19.8223 5.28516L17.7236 5.90723L19.0703 7.75977L18.2227 8.39551L16.958 6.42676L15.7207 8.34766L14.8662 7.72559Z"
                            fill="#F48E19"
                            className={cn(
                              advancedTasksSolved && 'fill-foreground'
                            )}
                          />
                        </g>
                        <defs>
                          <clipPath id="clip0_3557_29169">
                            <rect width="20" height="20" fill="white" />
                          </clipPath>
                        </defs>
                      </svg>
                    </div>
                  }
                />

                <TaskStatusBadge
                  status={task.status}
                  className="hidden sm:flex"
                />
              </div>
            </div>
            <div className="flex flex-col gap-4">
              <span className="text-2xl">{title}</span>
              <span className="text-secondary text-sm">{description}</span>
            </div>

            <div className="mt-6 flex flex-col sm:mt-auto sm:flex-row sm:items-center">
              <div className="grid grid-cols-2 gap-4 sm:flex sm:flex-row sm:gap-8">
                <div className="flex flex-col gap-3.5">
                  <span className="text-secondary text-xxs rounded-[6px] bg-[#14171C] px-3 py-1.75 whitespace-nowrap uppercase sm:w-fit sm:rounded-[0.3125vw]">
                    Выполнили задачу
                  </span>
                  <div className="flex flex-row items-center gap-2">
                    <svg
                      width="24"
                      height="24"
                      viewBox="0 0 24 24"
                      fill="none"
                      xmlns="http://www.w3.org/2000/svg"
                      className="h-6 w-6"
                    >
                      <rect width="24" height="24" rx="12" fill="#01050D" />
                      <path
                        d="M11.9987 12.0013C13.6095 12.0013 14.9154 10.6955 14.9154 9.08464C14.9154 7.4738 13.6095 6.16797 11.9987 6.16797C10.3879 6.16797 9.08203 7.4738 9.08203 9.08464C9.08203 10.6955 10.3879 12.0013 11.9987 12.0013Z"
                        fill="#F2F2F2"
                      />
                      <path
                        d="M12.0017 13.457C9.07922 13.457 6.69922 15.417 6.69922 17.832C6.69922 17.9954 6.82755 18.1237 6.99089 18.1237H17.0125C17.1759 18.1237 17.3042 17.9954 17.3042 17.832C17.3042 15.417 14.9242 13.457 12.0017 13.457Z"
                        fill="#F2F2F2"
                      />
                    </svg>
                    <span className="text-base font-medium">
                      {completionCount}
                    </span>
                  </div>
                </div>

                <div className="flex flex-col gap-3.5">
                  <span className="text-secondary text-xxs rounded-[6px] bg-[#14171C] px-3 py-1.75 whitespace-nowrap uppercase sm:w-fit sm:rounded-[0.3125vw]">
                    Рейтинг задачи
                  </span>
                  <div className="flex flex-row items-center gap-2">
                    <svg
                      width="24"
                      height="24"
                      viewBox="0 0 24 24"
                      fill="none"
                      xmlns="http://www.w3.org/2000/svg"
                      className="h-6 w-6"
                    >
                      <rect width="24" height="24" rx="12" fill="#01050D" />
                      <path
                        d="M11.4124 6.49587C11.7853 6.31909 12.2173 6.31909 12.5902 6.49587C12.8481 6.61823 13.0315 6.84937 13.1937 7.1111C13.3568 7.37444 13.5362 7.73277 13.7591 8.17849L13.9476 8.55544C14.1004 8.8611 14.1447 8.94137 14.2005 8.99977C14.2581 9.05999 14.3272 9.1082 14.4036 9.14138C14.4777 9.17349 14.5683 9.18767 14.9075 9.22536L15.0706 9.24294L15.0902 9.24587C15.6255 9.30535 16.0534 9.35287 16.3773 9.41872C16.6967 9.48368 16.9951 9.57919 17.2034 9.79177C17.5015 10.0959 17.6417 10.5214 17.5833 10.9431C17.5425 11.238 17.3599 11.4928 17.1419 11.7351C16.921 11.9808 16.6059 12.274 16.2113 12.6404L16.1966 12.6531L16.0247 12.8133C15.7257 13.091 15.6487 13.17 15.6058 13.2537C15.5616 13.3399 15.5375 13.4351 15.5364 13.532C15.5355 13.6259 15.5675 13.7335 15.7044 14.1238L15.7113 14.1424C15.9133 14.7182 16.0735 15.1742 16.1644 15.5291C16.2527 15.8738 16.3019 16.2125 16.1868 16.5056C16.0249 16.9181 15.674 17.2269 15.2445 17.3357C14.9401 17.4128 14.6133 17.3234 14.2855 17.1941C13.9488 17.0613 13.5221 16.8486 12.9847 16.5799L12.9671 16.5701L12.5491 16.3611C12.2676 16.2203 12.1904 16.1865 12.1165 16.1726C12.0404 16.1583 11.9622 16.1583 11.8861 16.1726C11.8122 16.1865 11.735 16.2203 11.4534 16.3611L11.0355 16.5701L11.0179 16.5799C10.4805 16.8486 10.0537 17.0613 9.71711 17.1941C9.38923 17.3234 9.06251 17.4128 8.75813 17.3357C8.32857 17.2269 7.97768 16.9181 7.81574 16.5056C7.70067 16.2125 7.74992 15.8738 7.8382 15.5291C7.92907 15.1742 8.08927 14.7182 8.29133 14.1424L8.29816 14.1238C8.43512 13.7335 8.46712 13.6259 8.46613 13.532C8.46508 13.4351 8.441 13.3399 8.3968 13.2537C8.35384 13.17 8.27692 13.091 7.97785 12.8133L7.80598 12.6531L7.79133 12.6404C7.3967 12.274 7.08163 11.9808 6.86066 11.7351C6.64272 11.4928 6.4601 11.238 6.41926 10.9431C6.36086 10.5214 6.50112 10.0959 6.79914 9.79177C7.0075 9.57919 7.30592 9.48368 7.62531 9.41872C7.94914 9.35287 8.37706 9.30535 8.91242 9.24587L8.93195 9.24294L9.09504 9.22536C9.43427 9.18767 9.5249 9.17349 9.59895 9.14138C9.67535 9.1082 9.74452 9.05999 9.80207 8.99977C9.85787 8.94137 9.90217 8.8611 10.055 8.55544L10.2435 8.17849C10.4663 7.73277 10.6458 7.37444 10.8089 7.1111C10.9711 6.84937 11.1544 6.61823 11.4124 6.49587Z"
                        fill="#FEF360"
                      />
                    </svg>
                    <span className="text-base font-medium">{rating}</span>
                  </div>
                </div>
              </div>
              <div className="flex justify-center gap-2 pt-8 sm:hidden">
                <span className="text-secondary/50 text-xs">Статус:</span>
                <MobileTaskStatusBadge status={task.status} />
              </div>
              <div className="mt-5 flex w-full sm:mt-0">
                <Link
                  href={`/task/${courseId}/${task.id}`}
                  className={cn(
                    'flex w-full cursor-pointer flex-row items-center justify-center rounded-[5.2083vw] px-15.75 py-3 text-sm sm:ml-auto sm:w-auto',
                    regularTasksSolved
                      ? 'border-primary hover:bg-primary border'
                      : 'bg-primary hover:bg-[#1242B2]'
                  )}
                  prefetch={true}
                >
                  {!regularTasksSolved
                    ? 'Выполнить'
                    : !advancedTasksSolved
                      ? 'Дорешать'
                      : 'Посмотреть'}
                  <svg
                    width="21"
                    height="20"
                    viewBox="0 0 21 20"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg"
                    className="h-5 w-5"
                  >
                    <path
                      d="M14.2305 4.43162C14.5292 4.14484 15.0042 4.15441 15.291 4.45311L19.9062 9.2617C20.1848 9.55191 20.1848 10.0106 19.9062 10.3008L15.291 15.1094C15.0042 15.4082 14.5293 15.4177 14.2305 15.1308C13.9319 14.844 13.9222 14.369 14.209 14.0703L18.3262 9.78123L14.209 5.49217C13.9222 5.19338 13.9317 4.71846 14.2305 4.43162Z"
                      fill="#F2F2F2"
                    />
                  </svg>
                </Link>
              </div>
            </div>
          </div>
        </>
      )}
    </div>
  );
}

export function TaskCardGridItem({
  task,
  loading,
  updateDate = '',
  heroImageSrc = '/heroes/Alex.png',
  heroName = 'Алекс',
  heroTagline = 'Реши задачу за нашего героя!',
  labels = [],
  title = 'Без названия',
  description = '',
  completionCount = '0',
  rating = '0',
  onExecute,
}: TaskCardProps) {
  const router = useRouter();
  const { courseId } = useParams();

  const handleOpenTask = () => {
    if (task?.id) {
      router.push(`/lesson/${courseId}/task/${task.id}`);
    }
  };

  const regularTasksSolved = task?.status == 'completed';
  const advancedTasksSolved = regularTasksSolved && task?.advancedTasksSolved;

  return (
    <div
      className={cn(
        'bg-muted border-accent relative flex h-auto w-auto flex-col border-b nth-[2n+1]:border-r sm:h-123.5'
      )}
    >
      {loading ? (
        <div className="flex h-full w-full items-center justify-center">
          <div className="flex flex-col items-center gap-4">
            <div className="border-primary h-16 w-16 animate-spin rounded-full border-t-2 border-b-2"></div>
            <p className="text-lg font-medium text-gray-600">Loading...</p>
          </div>
        </div>
      ) : (
        <>
          <div className="shrink-0 bg-[#01050D]">
            <div className="flex h-full flex-col gap-8 bg-[url('/images/grids/task-grid-mult.svg')] bg-contain bg-bottom-right bg-no-repeat p-8 py-6">
              <div className="text-secondary/50 flex flex-row justify-between text-xs">
                <span>Обновление задачи</span>
                <div className="flex flex-row items-center gap-1">
                  <div className="bg-success h-1 w-1 rounded-full" />
                  <span className="text-foreground text-xs">{updateDate}</span>
                </div>
              </div>

              <div className="relative mt-auto flex flex-row items-center">
                <div className="relative">
                  <Image
                    src={heroImageSrc}
                    alt={heroName}
                    width={110}
                    height={110}
                    className="h-12 w-12"
                  />
                  <svg
                    width="20"
                    height="20"
                    viewBox="0 0 20 20"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg"
                    className="absolute bottom-0 left-1/2 h-5 w-5 -translate-x-[calc(50%-var(--spacing)*6.25)]"
                  >
                    <path
                      d="M19.5562 8.74031L18.1961 7.16071C17.9361 6.86079 17.7261 6.30093 17.7261 5.90103V4.20145C17.7261 3.14171 16.856 2.27193 15.796 2.27193H14.0959C13.7059 2.27193 13.1358 2.06198 12.8358 1.80205L11.2557 0.442389C10.5657 -0.147463 9.43559 -0.147463 8.73554 0.442389L7.16544 1.81205C6.86543 2.06198 6.29539 2.27193 5.90537 2.27193H4.17526C3.11519 2.27193 2.24514 3.14171 2.24514 4.20145V5.91102C2.24514 6.30092 2.03513 6.86079 1.78511 7.16071L0.435027 8.75031C-0.145009 9.44014 -0.145009 10.5599 0.435027 11.2497L1.78511 12.8393C2.03513 13.1392 2.24514 13.6991 2.24514 14.089V15.7985C2.24514 16.8583 3.11519 17.7281 4.17526 17.7281H5.90537C6.29539 17.7281 6.86543 17.938 7.16544 18.198L8.74554 19.5576C9.43559 20.1475 10.5657 20.1475 11.2657 19.5576L12.8458 18.198C13.1458 17.938 13.7059 17.7281 14.1059 17.7281H15.806C16.866 17.7281 17.7361 16.8583 17.7361 15.7985V14.099C17.7361 13.7091 17.9461 13.1392 18.2061 12.8393L19.5662 11.2597C20.1463 10.5699 20.1463 9.43014 19.5562 8.74031Z"
                      fill="#010101"
                    />
                    <ellipse
                      cx="10.5508"
                      cy="10.5531"
                      rx="5"
                      ry="4.99844"
                      fill="#F2F2F2"
                    />
                    <path
                      d="M17.433 9.02068L16.3752 7.7921C16.173 7.55882 16.0096 7.12338 16.0096 6.81234V5.49045C16.0096 4.66621 15.3329 3.98971 14.5084 3.98971H13.1861C12.8828 3.98971 12.4394 3.82642 12.2061 3.62425L10.9771 2.56674C10.4404 2.10796 9.56144 2.10796 9.01697 2.56674L7.79578 3.63203C7.56243 3.82642 7.11907 3.98971 6.81572 3.98971H5.47008C4.64558 3.98971 3.96888 4.66621 3.96888 5.49045V6.82012C3.96888 7.12337 3.80553 7.55882 3.61108 7.7921L2.56101 9.02845C2.10987 9.56499 2.10987 10.4359 2.56101 10.9724L3.61108 12.2088C3.80553 12.442 3.96888 12.8775 3.96888 13.1807V14.5104C3.96888 15.3347 4.64558 16.0112 5.47008 16.0112H6.81572C7.11907 16.0112 7.56243 16.1744 7.79578 16.3766L9.02474 17.4341C9.56144 17.8929 10.4404 17.8929 10.9849 17.4341L12.2138 16.3766C12.4472 16.1744 12.8828 16.0112 13.1939 16.0112H14.5162C15.3407 16.0112 16.0174 15.3347 16.0174 14.5104V13.1885C16.0174 12.8853 16.1807 12.442 16.383 12.2088L17.4408 10.9802C17.892 10.4437 17.892 9.55721 17.433 9.02068ZM13.2328 8.5308L9.47588 12.2865C9.36699 12.3954 9.2192 12.4576 9.06364 12.4576C8.90807 12.4576 8.76028 12.3954 8.65139 12.2865L6.76905 10.4048C6.54348 10.1793 6.54348 9.80604 6.76905 9.58054C6.99462 9.35504 7.36798 9.35504 7.59354 9.58054L9.06364 11.0502L12.4083 7.70656C12.6339 7.48106 13.0072 7.48106 13.2328 7.70656C13.4584 7.93206 13.4584 8.3053 13.2328 8.5308Z"
                      fill="#195AF4"
                    />
                  </svg>
                </div>

                <div className="flex flex-col gap-2.5 px-5">
                  <div className="flex flex-row items-center gap-2">
                    <span className="text-xl leading-6">{heroName}</span>
                    <span className="font-delight border-accent rounded-[100px] border-[0.5px] px-3 pt-1 pb-1.25 text-xs leading-3.75">
                      BF heroes
                    </span>
                  </div>
                  <span className="text-secondary text-xs">{heroTagline}</span>
                </div>
              </div>
            </div>
          </div>
          <div className="flex w-full flex-col p-5 sm:p-8">
            <div className="flex flex-row justify-between pb-8">
              <TaskNavigation labels={labels} />

              <div className="flex flex-row items-center gap-2">
                <InfoPopover
                  offsetSide={60.5}
                  position="left"
                  title="Выполнение задач"
                  popoverClassName='w-119.5'
                  content={`1. Синяя галочка — обозначает, что все основные задачи или тесты успешно выполнены.
                    2. Оранжевая галочка — указывает на то, что выполнены сложные задачи или тесты.`}
                  icon={
                    <div
                      className={cn(
                        'border-primary/50 rounded-[8px] border-[calc(0.25*var(--spacing))] px-2 py-1.25 sm:rounded-[0.4167vw]',
                        regularTasksSolved
                          ? 'bg-primary cursor-pointer'
                          : 'hover:bg-primary/10 cursor-pointer'
                      )}
                    >
                      <svg
                        width="20"
                        height="20"
                        viewBox="0 0 20 20"
                        fill="none"
                        xmlns="http://www.w3.org/2000/svg"
                        className="h-5 w-5"
                      >
                        <path
                          d="M5.44922 10.65L8.04922 13.25L14.5492 6.75"
                          stroke="#195AF4"
                          stroke-width="1.5"
                          stroke-linecap="round"
                          stroke-linejoin="round"
                          className={cn(regularTasksSolved && 'stroke-white')}
                        />
                      </svg>
                    </div>
                  }
                />
                <InfoPopover
                  offsetSide={-42}
                  title="Выполнение задач"
                  content={`1. Синяя галочка — обозначает, что все основные задачи или тесты успешно выполнены.
                    2. Оранжевая галочка — указывает на то, что выполнены сложные задачи или тесты.`}
                  icon={
                    <div
                      className={cn(
                        'rounded-[8px] border-[calc(0.25*var(--spacing))] border-[#F48E19]/50 px-2 py-1.25 sm:rounded-[0.4167vw]',
                        advancedTasksSolved
                          ? 'cursor-pointer bg-[#F48E19]'
                          : 'cursor-pointer hover:bg-[#F48E19]/10'
                      )}
                    >
                      <svg
                        width="20"
                        height="20"
                        viewBox="0 0 20 20"
                        fill="none"
                        xmlns="http://www.w3.org/2000/svg"
                        className="h-5 w-5"
                      >
                        <g clip-path="url(#clip0_3557_29169)">
                          <path
                            d="M5.44922 10.65L8.04922 13.25L14.5492 6.75"
                            stroke="#F48E19"
                            stroke-width="1.5"
                            stroke-linecap="round"
                            stroke-linejoin="round"
                            className={cn(
                              advancedTasksSolved && 'stroke-foreground'
                            )}
                          />
                          <circle
                            cx="17"
                            cy="5.5"
                            r="4.5"
                            fill="#0F1217"
                            className={cn(
                              advancedTasksSolved && 'fill-[#F48E19]'
                            )}
                          />
                          <path
                            d="M14.8662 7.72559L16.2402 5.83887L14.1758 5.22363L14.4971 4.19824L16.5615 4.95703L16.5 2.60547H17.5391L17.4707 4.99805L19.5078 4.23926L19.8223 5.28516L17.7236 5.90723L19.0703 7.75977L18.2227 8.39551L16.958 6.42676L15.7207 8.34766L14.8662 7.72559Z"
                            fill="#F48E19"
                            className={cn(
                              advancedTasksSolved && 'fill-foreground'
                            )}
                          />
                        </g>
                        <defs>
                          <clipPath id="clip0_3557_29169">
                            <rect width="20" height="20" fill="white" />
                          </clipPath>
                        </defs>
                      </svg>
                    </div>
                  }
                />

                <TaskStatusBadge
                  status={task.status}
                  className="hidden sm:flex"
                />
              </div>
            </div>
            <div className="flex flex-col gap-4 sm:pb-10">
              <span className="text-2xl">{title}</span>
              <span className="text-secondary text-sm">{description}</span>
            </div>

            <div className="mt-6 flex flex-col sm:mt-auto sm:flex-row sm:items-center">
              <div className="grid grid-cols-2 gap-5">
                <div className="flex flex-col gap-3">
                  <span className="text-secondary text-xxs hidden w-fit min-w-25 rounded-[0.3125vw] bg-[#14171C] px-3 py-1.75 whitespace-nowrap uppercase sm:block">
                    Выполнили
                  </span>
                  <span className="text-secondary text-xxs rounded-[6px] bg-[#14171C] px-3 py-1.75 whitespace-nowrap uppercase sm:hidden sm:w-fit sm:rounded-[0.3125vw]">
                    Выполнили задачу
                  </span>
                  <div className="flex flex-row items-center gap-2">
                    <svg
                      width="24"
                      height="24"
                      viewBox="0 0 24 24"
                      fill="none"
                      xmlns="http://www.w3.org/2000/svg"
                      className="h-6 w-6"
                    >
                      <rect width="24" height="24" rx="12" fill="#01050D" />
                      <path
                        d="M11.9987 12.0013C13.6095 12.0013 14.9154 10.6955 14.9154 9.08464C14.9154 7.4738 13.6095 6.16797 11.9987 6.16797C10.3879 6.16797 9.08203 7.4738 9.08203 9.08464C9.08203 10.6955 10.3879 12.0013 11.9987 12.0013Z"
                        fill="#F2F2F2"
                      />
                      <path
                        d="M12.0017 13.457C9.07922 13.457 6.69922 15.417 6.69922 17.832C6.69922 17.9954 6.82755 18.1237 6.99089 18.1237H17.0125C17.1759 18.1237 17.3042 17.9954 17.3042 17.832C17.3042 15.417 14.9242 13.457 12.0017 13.457Z"
                        fill="#F2F2F2"
                      />
                    </svg>
                    <span className="text-base font-medium">
                      {completionCount}
                    </span>
                  </div>
                </div>

                <div className="flex flex-col gap-3.5">
                  <span className="text-secondary text-xxs hidden w-fit min-w-25 rounded-[0.3125vw] bg-[#14171C] px-3 py-1.75 whitespace-nowrap uppercase sm:block">
                    Рейтинг
                  </span>
                  <span className="text-secondary text-xxs block rounded-[6px] bg-[#14171C] px-3 py-1.75 whitespace-nowrap uppercase sm:hidden sm:w-fit">
                    Рейтинг задачи
                  </span>
                  <div className="flex flex-row items-center gap-2">
                    <svg
                      width="24"
                      height="24"
                      viewBox="0 0 24 24"
                      fill="none"
                      xmlns="http://www.w3.org/2000/svg"
                      className="h-6 w-6"
                    >
                      <rect width="24" height="24" rx="12" fill="#01050D" />
                      <path
                        d="M11.4124 6.49587C11.7853 6.31909 12.2173 6.31909 12.5902 6.49587C12.8481 6.61823 13.0315 6.84937 13.1937 7.1111C13.3568 7.37444 13.5362 7.73277 13.7591 8.17849L13.9476 8.55544C14.1004 8.8611 14.1447 8.94137 14.2005 8.99977C14.2581 9.05999 14.3272 9.1082 14.4036 9.14138C14.4777 9.17349 14.5683 9.18767 14.9075 9.22536L15.0706 9.24294L15.0902 9.24587C15.6255 9.30535 16.0534 9.35287 16.3773 9.41872C16.6967 9.48368 16.9951 9.57919 17.2034 9.79177C17.5015 10.0959 17.6417 10.5214 17.5833 10.9431C17.5425 11.238 17.3599 11.4928 17.1419 11.7351C16.921 11.9808 16.6059 12.274 16.2113 12.6404L16.1966 12.6531L16.0247 12.8133C15.7257 13.091 15.6487 13.17 15.6058 13.2537C15.5616 13.3399 15.5375 13.4351 15.5364 13.532C15.5355 13.6259 15.5675 13.7335 15.7044 14.1238L15.7113 14.1424C15.9133 14.7182 16.0735 15.1742 16.1644 15.5291C16.2527 15.8738 16.3019 16.2125 16.1868 16.5056C16.0249 16.9181 15.674 17.2269 15.2445 17.3357C14.9401 17.4128 14.6133 17.3234 14.2855 17.1941C13.9488 17.0613 13.5221 16.8486 12.9847 16.5799L12.9671 16.5701L12.5491 16.3611C12.2676 16.2203 12.1904 16.1865 12.1165 16.1726C12.0404 16.1583 11.9622 16.1583 11.8861 16.1726C11.8122 16.1865 11.735 16.2203 11.4534 16.3611L11.0355 16.5701L11.0179 16.5799C10.4805 16.8486 10.0537 17.0613 9.71711 17.1941C9.38923 17.3234 9.06251 17.4128 8.75813 17.3357C8.32857 17.2269 7.97768 16.9181 7.81574 16.5056C7.70067 16.2125 7.74992 15.8738 7.8382 15.5291C7.92907 15.1742 8.08927 14.7182 8.29133 14.1424L8.29816 14.1238C8.43512 13.7335 8.46712 13.6259 8.46613 13.532C8.46508 13.4351 8.441 13.3399 8.3968 13.2537C8.35384 13.17 8.27692 13.091 7.97785 12.8133L7.80598 12.6531L7.79133 12.6404C7.3967 12.274 7.08163 11.9808 6.86066 11.7351C6.64272 11.4928 6.4601 11.238 6.41926 10.9431C6.36086 10.5214 6.50112 10.0959 6.79914 9.79177C7.0075 9.57919 7.30592 9.48368 7.62531 9.41872C7.94914 9.35287 8.37706 9.30535 8.91242 9.24587L8.93195 9.24294L9.09504 9.22536C9.43427 9.18767 9.5249 9.17349 9.59895 9.14138C9.67535 9.1082 9.74452 9.05999 9.80207 8.99977C9.85787 8.94137 9.90217 8.8611 10.055 8.55544L10.2435 8.17849C10.4663 7.73277 10.6458 7.37444 10.8089 7.1111C10.9711 6.84937 11.1544 6.61823 11.4124 6.49587Z"
                        fill="#FEF360"
                      />
                    </svg>
                    <span className="text-base font-medium">{rating}</span>
                  </div>
                </div>
              </div>
              <div className="flex justify-center gap-2 pt-8 sm:hidden">
                <span className="text-secondary/50 text-xs">Статус:</span>
                <MobileTaskStatusBadge status={task.status} />
              </div>
              <div className="mt-5 flex w-full sm:mt-0 sm:ml-auto sm:w-auto">
                <Link
                  href={`/task/${courseId}/${task.id}`}
                  className={cn(
                    'flex w-full cursor-pointer flex-row items-center justify-center rounded-[5.2083vw] px-8.25 py-3 text-sm sm:w-auto',
                    regularTasksSolved
                      ? 'border-primary hover:bg-primary border'
                      : 'bg-primary hover:bg-[#1242B2]'
                  )}
                  prefetch={true}
                >
                  {!regularTasksSolved
                    ? 'Выполнить'
                    : !advancedTasksSolved
                      ? 'Дорешать'
                      : 'Посмотреть'}

                  <svg
                    width="21"
                    height="20"
                    viewBox="0 0 21 20"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg"
                    className="h-5 w-5"
                  >
                    <path
                      d="M14.2305 4.43162C14.5292 4.14484 15.0042 4.15441 15.291 4.45311L19.9062 9.2617C20.1848 9.55191 20.1848 10.0106 19.9062 10.3008L15.291 15.1094C15.0042 15.4082 14.5293 15.4177 14.2305 15.1308C13.9319 14.844 13.9222 14.369 14.209 14.0703L18.3262 9.78123L14.209 5.49217C13.9222 5.19338 13.9317 4.71846 14.2305 4.43162Z"
                      fill="#F2F2F2"
                    />
                  </svg>
                </Link>
              </div>
            </div>
          </div>
        </>
      )}
    </div>
  );
}
