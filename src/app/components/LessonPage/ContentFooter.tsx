'use client';

import { cn } from '~/helpers';
import BrokenHeart from './assets/BrokenHeart.png';
import FireAction from './assets/FireAction.png';

import Image from 'next/image';
import { useEffect, useState } from 'react';
import DropDownAction from '../shared/DropDownAction';
import { usePathname } from 'next/navigation';
import { authClient } from '~/server/auth/client';

const ShareIcon = () => {
  return (
    <svg
      width="20"
      height="20"
      viewBox="0 0 20 20"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      className="h-5 w-5"
    >
      <path
        d="M12.5 3V7C4.5 7 2.5 11.1 2.5 17C3.54 13.04 6.5 11 10.5 11H12.5V15L18.5 8.68L12.5 3Z"
        fill="#195AF4"
        className="group-hover:fill-[#195AF4]/50"
      />
    </svg>
  );
};

const Separator = () => {
  return <div className="bg-secondary/20 h-8 w-px" />;
};

const StarIcon = ({ className }: { className: string }) => {
  return (
    <svg
      width="20"
      height="20"
      viewBox="0 0 20 20"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      className={cn('h-5 w-5', className)}
    >
      <path
        d="M9.21364 2.66104C9.71061 2.42549 10.287 2.42549 10.784 2.66104C11.128 2.82422 11.3724 3.13325 11.5886 3.48233C11.8061 3.83344 12.0454 4.31089 12.3425 4.90518L12.3543 4.92862L12.5935 5.40811C12.7972 5.81555 12.857 5.92204 12.9314 5.99991C13.0081 6.08019 13.1001 6.14415 13.2019 6.18838C13.3007 6.23126 13.4212 6.2504 13.8738 6.30069L14.0916 6.3251L14.1179 6.32803C14.8318 6.40734 15.402 6.47068 15.8338 6.5585C16.2596 6.64512 16.6565 6.77312 16.9343 7.05655C17.3318 7.46209 17.5191 8.02922 17.4412 8.5917C17.3867 8.98474 17.1438 9.3243 16.8533 9.64737C16.5587 9.97495 16.1383 10.3657 15.6121 10.8544L15.5925 10.872L15.3631 11.0849C14.9643 11.4551 14.8617 11.5603 14.8045 11.6718C14.7454 11.7868 14.714 11.9145 14.7127 12.0439C14.7114 12.1689 14.7539 12.3122 14.9363 12.8319L14.9451 12.8564C15.2146 13.6243 15.4284 14.2328 15.5496 14.706C15.6672 15.1655 15.7331 15.6169 15.5798 16.0077C15.3639 16.5577 14.8958 16.9701 14.323 17.1151C13.9171 17.2179 13.481 17.0982 13.0437 16.9257C12.5949 16.7486 12.0267 16.4645 11.3103 16.1064L11.2869 16.0946L10.7293 15.8163C10.3535 15.6284 10.2506 15.5819 10.1521 15.5634C10.0508 15.5444 9.94681 15.5444 9.84547 15.5634C9.74698 15.5819 9.64407 15.6284 9.26833 15.8163L8.71071 16.0946L8.68727 16.1064C7.97091 16.4645 7.40267 16.7486 6.95387 16.9257C6.5166 17.0982 6.08052 17.2179 5.67458 17.1151C5.10181 16.9701 4.63367 16.5577 4.41774 16.0077C4.26451 15.617 4.33035 15.1655 4.44801 14.706C4.56919 14.2328 4.78304 13.6243 5.05251 12.8564L5.06129 12.8319C5.24367 12.3122 5.28615 12.1689 5.28493 12.0439C5.28357 11.9145 5.25215 11.7868 5.19313 11.6718C5.13585 11.5603 5.03329 11.4551 4.63454 11.0849L4.40504 10.872L4.38551 10.8544C3.85924 10.3657 3.43893 9.97496 3.1443 9.64737C2.85377 9.32429 2.61093 8.98474 2.55641 8.5917C2.47849 8.02922 2.66576 7.46209 3.06325 7.05655C3.34106 6.77312 3.73799 6.64512 4.16383 6.5585C4.59558 6.47068 5.16582 6.40734 5.87965 6.32803L5.90602 6.3251L6.12379 6.30069C6.57639 6.2504 6.69691 6.23126 6.79567 6.18838C6.89753 6.14415 6.98946 6.08019 7.06618 5.99991C7.14057 5.92204 7.20035 5.81555 7.40407 5.40811L7.64333 4.92862L7.65505 4.90518C7.95218 4.31089 8.19145 3.83344 8.40895 3.48233C8.62523 3.13325 8.86957 2.82422 9.21364 2.66104ZM10.3562 3.56436C10.1302 3.45717 9.86738 3.45717 9.64137 3.56436C9.57003 3.59825 9.45303 3.69573 9.25856 4.00967C9.06802 4.31732 8.84926 4.75309 8.53786 5.37588L8.2986 5.85537C8.28904 5.87449 8.27959 5.89336 8.27028 5.91202C8.10874 6.23568 7.98173 6.49043 7.78981 6.69131C7.621 6.86798 7.41825 7.00904 7.19411 7.10635C6.93928 7.21697 6.65618 7.24831 6.29665 7.28799C6.27607 7.29026 6.25523 7.29248 6.23415 7.29483L6.01637 7.31924C5.27044 7.40212 4.74523 7.46026 4.36305 7.53799C3.96968 7.61801 3.83195 7.70079 3.77712 7.75674C3.59666 7.94099 3.51134 8.19853 3.54665 8.45401C3.5574 8.5316 3.6191 8.67998 3.88747 8.97842C4.14825 9.26842 4.53572 9.62787 5.08571 10.1386L5.3152 10.3524C5.334 10.3699 5.35252 10.3872 5.37087 10.4042C5.68631 10.6966 5.93462 10.9263 6.08278 11.2147C6.21281 11.468 6.28194 11.7484 6.28493 12.0331C6.28746 12.2763 6.2242 12.518 6.13161 12.7968L6.00465 13.163C5.72466 13.961 5.52583 14.5281 5.41676 14.954C5.30295 15.3985 5.32177 15.5722 5.34938 15.6425C5.44751 15.8924 5.65944 16.0804 5.91969 16.1464C5.99406 16.1652 6.16735 16.1614 6.58669 15.996C6.98949 15.8371 7.51819 15.5727 8.26344 15.2001L8.82106 14.9218C8.83868 14.913 8.85661 14.904 8.8738 14.8954C9.17229 14.7459 9.40718 14.6286 9.6609 14.581C9.88427 14.5391 10.1133 14.5391 10.3367 14.581C10.5904 14.6286 10.8253 14.7459 11.1238 14.8954C11.141 14.904 11.1589 14.913 11.1765 14.9218L11.7341 15.2001C12.4794 15.5727 13.0081 15.8371 13.4109 15.996C13.8302 16.1614 14.0035 16.1652 14.0779 16.1464C14.3382 16.0804 14.5501 15.8924 14.6482 15.6425C14.6758 15.5722 14.6946 15.3985 14.5808 14.954C14.4718 14.5281 14.2729 13.961 13.9929 13.163L13.866 12.7968C13.7734 12.518 13.7101 12.2763 13.7127 12.0331C13.7157 11.7484 13.7848 11.468 13.9148 11.2147C14.063 10.9263 14.3113 10.6966 14.6267 10.4042C14.6451 10.3872 14.6636 10.3699 14.6824 10.3524L14.9119 10.1386C15.4619 9.62787 15.8493 9.26842 16.1101 8.97842C16.3785 8.67998 16.4402 8.5316 16.4509 8.45401C16.4862 8.19853 16.4009 7.94099 16.2205 7.75674C16.1656 7.70079 16.0279 7.61801 15.6345 7.53799C15.2524 7.46026 14.7271 7.40212 13.9812 7.31924L13.7634 7.29483C13.7424 7.29248 13.7215 7.29026 13.7009 7.28799C13.3414 7.24831 13.0583 7.21697 12.8035 7.10635C12.5793 7.00904 12.3766 6.86798 12.2078 6.69131C12.0159 6.49043 11.8888 6.23568 11.7273 5.91202C11.718 5.89336 11.7085 5.87449 11.699 5.85537L11.4597 5.37588C11.1483 4.75309 10.9296 4.31732 10.739 4.00967C10.5446 3.69572 10.4276 3.59825 10.3562 3.56436Z"
        fill="#FEF360"
        fill-opacity="0.5"
        className="group-hover:fill-[#FEF360]/50"
      />
    </svg>
  );
};

const StarIconFilled = ({ className }: { className: string }) => {
  return (
    <svg
      width="20"
      height="20"
      viewBox="0 0 20 20"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      className={cn('h-5 w-5', className)}
    >
      <path
        d="M9.21364 2.66104C9.71061 2.42549 10.287 2.42549 10.784 2.66104C11.128 2.82422 11.3724 3.13325 11.5886 3.48233C11.8061 3.83344 12.0454 4.31089 12.3425 4.90518L12.3543 4.92862L12.5935 5.40811C12.7972 5.81555 12.857 5.92204 12.9314 5.99991C13.0081 6.08019 13.1001 6.14415 13.2019 6.18838C13.3007 6.23126 13.4212 6.2504 13.8738 6.30069L14.0916 6.3251L14.1179 6.32803C14.8318 6.40734 15.402 6.47068 15.8338 6.5585C16.2596 6.64512 16.6565 6.77312 16.9343 7.05655C17.3318 7.46209 17.5191 8.02922 17.4412 8.5917C17.3867 8.98474 17.1438 9.3243 16.8533 9.64737C16.5587 9.97495 16.1383 10.3657 15.6121 10.8544L15.5925 10.872L15.3631 11.0849C14.9643 11.4551 14.8617 11.5603 14.8045 11.6718C14.7454 11.7868 14.714 11.9145 14.7127 12.0439C14.7114 12.1689 14.7539 12.3122 14.9363 12.8319L14.9451 12.8564C15.2146 13.6243 15.4284 14.2328 15.5496 14.706C15.6672 15.1655 15.7331 15.6169 15.5798 16.0077C15.3639 16.5577 14.8958 16.9701 14.323 17.1151C13.9171 17.2179 13.481 17.0982 13.0437 16.9257C12.5949 16.7486 12.0267 16.4645 11.3103 16.1064L11.2869 16.0946L10.7293 15.8163C10.3535 15.6284 10.2506 15.5819 10.1521 15.5634C10.0508 15.5444 9.94681 15.5444 9.84547 15.5634C9.74698 15.5819 9.64407 15.6284 9.26833 15.8163L8.71071 16.0946L8.68727 16.1064C7.97091 16.4645 7.40267 16.7486 6.95387 16.9257C6.5166 17.0982 6.08052 17.2179 5.67458 17.1151C5.10181 16.9701 4.63367 16.5577 4.41774 16.0077C4.26451 15.617 4.33035 15.1655 4.44801 14.706C4.56919 14.2328 4.78304 13.6243 5.05251 12.8564L5.06129 12.8319C5.24367 12.3122 5.28615 12.1689 5.28493 12.0439C5.28357 11.9145 5.25215 11.7868 5.19313 11.6718C5.13585 11.5603 5.03329 11.4551 4.63454 11.0849L4.40504 10.872L4.38551 10.8544C3.85924 10.3657 3.43893 9.97496 3.1443 9.64737C2.85377 9.32429 2.61093 8.98474 2.55641 8.5917C2.47849 8.02922 2.66576 7.46209 3.06325 7.05655C3.34106 6.77312 3.73799 6.64512 4.16383 6.5585C4.59558 6.47068 5.16582 6.40734 5.87965 6.32803L5.90602 6.3251L6.12379 6.30069C6.57639 6.2504 6.69691 6.23126 6.79567 6.18838C6.89753 6.14415 6.98946 6.08019 7.06618 5.99991C7.14057 5.92204 7.20035 5.81555 7.40407 5.40811L7.64333 4.92862L7.65505 4.90518C7.95218 4.31089 8.19145 3.83344 8.40895 3.48233C8.62523 3.13325 8.86957 2.82422 9.21364 2.66104Z"
        fill="#FEF360"
      />
    </svg>
  );
};

const Button = ({
  children,
  disabled,
}: {
  children: React.ReactNode;
  disabled?: boolean;
}) => (
  <button
    className="border-accent not-disabled:hover:bg-foreground not-disabled:hover:text-background group flex h-11 items-center gap-2 rounded-[100px] border px-6 not-disabled:cursor-pointer"
    disabled={disabled}
  >
    {children}
  </button>
);

const VkIcon = () => {
  return (
    <svg
      width="16"
      height="16"
      viewBox="0 0 16 16"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      className="h-4 w-4"
    >
      <rect width="16" height="16" rx="8" fill="#0077FF" />
      <path
        d="M8.39457 10.7992C5.38795 10.7992 3.67302 8.69712 3.60156 5.19922H5.10762C5.15709 7.76659 6.2674 8.85407 7.14685 9.0783V5.19922H8.56496V7.41343C9.43342 7.31814 10.3458 6.30913 10.6537 5.19922H12.0718C11.9558 5.77485 11.7246 6.31988 11.3926 6.80022C11.0606 7.28056 10.6351 7.68587 10.1425 7.99081C10.6923 8.26944 11.178 8.66382 11.5674 9.14792C11.9568 9.63202 12.2411 10.1948 12.4016 10.7992H10.8405C10.6965 10.2743 10.4037 9.80434 9.99892 9.44835C9.59412 9.09236 9.09529 8.86613 8.56496 8.79802V10.7992H8.39457Z"
        fill="white"
      />
    </svg>
  );
};

const FacebookIcon = () => {
  return (
    <svg
      width="16"
      height="16"
      viewBox="0 0 16 16"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      className="h-4 w-4"
    >
      <rect width="16" height="16" rx="8" fill="#0B84EE" />
      <path
        d="M8.66439 8.14514H10.1533L10.387 6.62344H8.66409V5.79176C8.66409 5.15962 8.86939 4.59907 9.45713 4.59907H10.4016V3.27112C10.2356 3.24857 9.88468 3.19922 9.22155 3.19922C7.83684 3.19922 7.02503 3.93494 7.02503 5.6111V6.62344H5.60156V8.14514H7.02503V12.3276C7.30694 12.3703 7.59248 12.3992 7.88559 12.3992C8.15054 12.3992 8.40913 12.3748 8.66439 12.3401V8.14514Z"
        fill="white"
      />
    </svg>
  );
};

const TwitterIcon = () => {
  return (
    <svg
      width="16"
      height="16"
      viewBox="0 0 16 16"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      className="h-4 w-4"
    >
      <g clip-path="url(#clip0_3557_48836)">
        <rect width="16" height="16" rx="8" fill="#01050D" />
        <path
          d="M8.59552 7.38246L11.2307 4.38281H10.6065L8.31738 6.98683L6.49047 4.38281H4.38281L7.14607 8.32092L4.38281 11.4661H5.00704L7.4228 8.7156L9.35257 11.4661H11.4602M5.23234 4.84379H6.19133L10.606 11.0278H9.64676"
          fill="white"
        />
      </g>
      <defs>
        <clipPath id="clip0_3557_48836">
          <rect width="16" height="16" rx="8" fill="white" />
        </clipPath>
      </defs>
    </svg>
  );
};

const TelegramIcon = () => {
  return (
    <svg
      width="16"
      height="16"
      viewBox="0 0 16 16"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      className="h-4 w-4"
    >
      <rect width="16" height="16" rx="8" fill="#1EA1DD" />
      <path
        d="M11.2016 5.04167L9.99939 11.3177C9.99939 11.3177 9.83119 11.7528 9.36912 11.5441L6.59539 9.34181L6.58253 9.33532C6.9572 8.98694 9.86252 6.28185 9.9895 6.15923C10.1861 5.96933 10.064 5.85627 9.83581 5.99972L5.54428 8.82197L3.88862 8.24509C3.88862 8.24509 3.62807 8.14911 3.603 7.94042C3.5776 7.73139 3.89719 7.61834 3.89719 7.61834L10.6468 4.87636C10.6468 4.87636 11.2016 4.62395 11.2016 5.04167Z"
        fill="#FEFEFE"
      />
    </svg>
  );
};

const CopyIcon = () => {
  return (
    <svg
      width="16"
      height="16"
      viewBox="0 0 16 16"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      className="h-4 w-4"
    >
      <g clip-path="url(#clip0_3557_48848)">
        <path
          d="M10.4 8.53766V11.0577C10.4 13.1577 9.56 13.9977 7.46 13.9977H4.94C2.84 13.9977 2 13.1577 2 11.0577V8.53766C2 6.43766 2.84 5.59766 4.94 5.59766H7.46C9.56 5.59766 10.4 6.43766 10.4 8.53766Z"
          stroke="#F2F2F2"
          stroke-width="0.8"
          stroke-linecap="round"
          stroke-linejoin="round"
        />
        <path
          d="M14.0016 4.93609V7.45609C14.0016 9.55609 13.1616 10.3961 11.0616 10.3961H10.4016V8.53609C10.4016 6.43609 9.56156 5.59609 7.46156 5.59609H5.60156V4.93609C5.60156 2.83609 6.44156 1.99609 8.54156 1.99609H11.0616C13.1616 1.99609 14.0016 2.83609 14.0016 4.93609Z"
          stroke="#F2F2F2"
          stroke-width="0.8"
          stroke-linecap="round"
          stroke-linejoin="round"
        />
      </g>
      <defs>
        <clipPath id="clip0_3557_48848">
          <rect width="16" height="16" fill="white" />
        </clipPath>
      </defs>
    </svg>
  );
};

export default function ContentFooter({ nextLocked }: { nextLocked: boolean }) {
  const [rating, setRating] = useState<number | undefined>(undefined);
  const pathname = usePathname();

  const totalRating = rating ?? 4.5;
  const session = authClient.useSession();

  const title = 'Изучи блокчейн разработку с blockfirst';
  const description = 'Изучи блокчейн разработку с blockfirst';
  const url = `https://app.blockfirst.io${pathname}`;

  return (
    <div className="border-accent flex flex-row border-b px-5 sm:px-16 pt-21.5 pb-10 justify-between">
      <Button>
        <svg
          width="20"
          height="20"
          viewBox="0 0 20 20"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
          className="h-5 w-5"
        >
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M8.77528 3.72212C8.5312 3.47804 8.13547 3.47804 7.89139 3.72212L2.05806 9.55539C1.94085 9.6726 1.875 9.83158 1.875 9.99734C1.875 10.1631 1.94085 10.3221 2.05806 10.4393L7.89139 16.2726C8.13547 16.5167 8.5312 16.5167 8.77528 16.2726C9.01935 16.0285 9.01935 15.6328 8.77528 15.3887L4.00888 10.6223H17.5C17.8452 10.6223 18.125 10.3425 18.125 9.99734C18.125 9.65216 17.8452 9.37234 17.5 9.37234H4.00889L8.77527 4.60601C9.01935 4.36193 9.01935 3.9662 8.77528 3.72212Z"
            fill="#F2F2F2"
            className="group-hover:fill-background"
          />
        </svg>
        <span className="text-sm">Назад</span>
      </Button>

      <div className="mr-auto ml-auto hidden flex-row items-center sm:flex">
        <DropDownAction
          direction="top"
          button={
            <div className="group mr-7 flex cursor-pointer flex-row gap-2">
              <ShareIcon />
              <span className="group-hover:text-foreground/50 text-sm">
                Поделиться
              </span>
            </div>
          }
          options={[
            {
              label: 'Вконтакте',
              value: 'vk',
              icon: <VkIcon />,
              link: `https://vk.com/share.php?url=${url}&title=${title}&description=${description}`,
            },
            {
              label: 'Facebook',
              value: 'facebook',
              icon: <FacebookIcon />,
              link: `https://www.facebook.com/sharer/sharer.php?u=${url}`,
            },
            {
              label: 'Twitter (X)',
              value: 'twitter',
              icon: <TwitterIcon />,
              link: `https://twitter.com/intent/tweet?url=${url}&text=${title}`,
            },
            {
              label: 'Telegram',
              value: 'telegram',
              icon: <TelegramIcon />,
              link: `https://t.me/share/url?url=${url}&text=${title}`,
            },
            {
              label: 'Копировать ссылку',
              value: 'copy',
              icon: <CopyIcon />,
              closeOnClick: true,
              onClick: () => {
                navigator.clipboard.writeText(url);
              },
            },
          ]}
        />
        <Separator />

        <div
          className={cn(
            'group/rating z-1000 mx-2 flex h-8 items-center rounded-[0.3125vw] px-5',
            !!rating && 'hover:bg-secondary/10 relative',
            session.data?.user && 'cursor-pointer'
          )}
          onClick={() => {
            if (!session.data?.user) {
              return;
            }
            rating && setRating(undefined);
          }}
        >
          {rating || !session.data?.user ? (
            <button
              className={cn(
                'relative flex flex-row items-center justify-center gap-2',
                session.data?.user && 'cursor-pointer'
              )}
            >
              <StarIconFilled className="" />

              <span className="text-sm leading-5">
                {totalRating.toFixed(2)}
              </span>
            </button>
          ) : (
            <>
              {Array.from({ length: 5 }).map((_, index) => (
                <button
                  className="group cursor-pointer"
                  key={index}
                  onClick={() => {
                    setRating(index + 1);
                  }}
                >
                  <StarIcon className="block not-first:ml-[-0.0521vw] group-hover:hidden group-has-[~button:hover]:hidden" />
                  <StarIconFilled className="hidden group-hover:block group-has-[~button:hover]:block" />
                </button>
              ))}
            </>
          )}
        </div>

        <Separator />

        <div className="ml-7 flex flex-row items-center justify-center gap-3">
          <div className="bg-secondary/10 group flex h-8 w-8 cursor-pointer items-center justify-center rounded-[0.3021vw] text-sm">
            <Image
              src={BrokenHeart}
              className="h-4 w-4 group-hover:hidden"
              alt="broken heart"
            />
            <svg
              width="20"
              height="20"
              viewBox="0 0 20 20"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
              className="hidden h-5 w-5 group-hover:block"
            >
              <path
                fill-rule="evenodd"
                clip-rule="evenodd"
                d="M3.53906 10C3.53906 9.65482 3.81888 9.375 4.16406 9.375H9.9974H15.8307C16.1759 9.375 16.4557 9.65482 16.4557 10C16.4557 10.3452 16.1759 10.625 15.8307 10.625H9.9974H4.16406C3.81888 10.625 3.53906 10.3452 3.53906 10Z"
                fill="#F2F2F2"
              />
            </svg>
          </div>
          <span className="text-sm">123</span>
          <div className="bg-secondary/10 group flex h-8 w-8 cursor-pointer items-center justify-center rounded-[0.3021vw] text-sm">
            <Image
              src={FireAction}
              className="h-4 w-4 group-hover:hidden"
              alt="fire"
            />
            <svg
              width="20"
              height="20"
              viewBox="0 0 20 20"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
              className="hidden h-5 w-5 group-hover:block"
            >
              <path
                fill-rule="evenodd"
                clip-rule="evenodd"
                d="M9.9974 3.41406C10.4116 3.41406 10.7474 3.74985 10.7474 4.16406V9.2474H15.8307C16.2449 9.2474 16.5807 9.58318 16.5807 9.9974C16.5807 10.4116 16.2449 10.7474 15.8307 10.7474H10.7474V15.8307C10.7474 16.2449 10.4116 16.5807 9.9974 16.5807C9.58318 16.5807 9.2474 16.2449 9.2474 15.8307V10.7474H4.16406C3.74985 10.7474 3.41406 10.4116 3.41406 9.9974C3.41406 9.58318 3.74985 9.2474 4.16406 9.2474H9.2474V4.16406C9.2474 3.74985 9.58318 3.41406 9.9974 3.41406Z"
                fill="#F2F2F2"
              />
            </svg>
          </div>
        </div>
      </div>

      <Button disabled={nextLocked}>
        <span className={cn('text-sm', nextLocked && 'text-secondary/50')}>
          Вперед
        </span>
        {nextLocked ? (
          <svg
            width="20"
            height="20"
            viewBox="0 0 20 20"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
            className="h-5 w-5"
          >
            <path
              d="M10.0007 13.5679C10.6009 13.5679 11.0874 13.0813 11.0874 12.4812C11.0874 11.881 10.6009 11.3945 10.0007 11.3945C9.40058 11.3945 8.91406 11.881 8.91406 12.4812C8.91406 13.0813 9.40058 13.5679 10.0007 13.5679Z"
              fill="#9AA6B5"
              fill-opacity="0.5"
            />
            <path
              d="M14.1854 8.35594V7.5226C14.1854 5.7226 13.752 3.33594 9.9987 3.33594C6.24536 3.33594 5.81203 5.7226 5.81203 7.5226V8.35594C3.94536 8.58927 3.33203 9.53594 3.33203 11.8626V13.1026C3.33203 15.8359 4.16536 16.6693 6.8987 16.6693H13.0987C15.832 16.6693 16.6654 15.8359 16.6654 13.1026V11.8626C16.6654 9.53594 16.052 8.58927 14.1854 8.35594ZM9.9987 14.4959C8.88536 14.4959 7.98536 13.5893 7.98536 12.4826C7.98536 11.3693 8.89203 10.4693 9.9987 10.4693C11.1054 10.4693 12.012 11.3759 12.012 12.4826C12.012 13.5959 11.112 14.4959 9.9987 14.4959ZM6.8987 8.29594C6.84536 8.29594 6.7987 8.29594 6.74536 8.29594V7.5226C6.74536 5.56927 7.2987 4.26927 9.9987 4.26927C12.6987 4.26927 13.252 5.56927 13.252 7.5226V8.3026C13.1987 8.3026 13.152 8.3026 13.0987 8.3026H6.8987V8.29594Z"
              fill="#9AA6B5"
              fill-opacity="0.5"
            />
          </svg>
        ) : (
          <svg
            width="21"
            height="20"
            viewBox="0 0 21 20"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
            className="h-5 w-5"
          >
            <path
              d="M14.2305 4.43162C14.5292 4.14484 15.0042 4.15441 15.291 4.45311L19.9062 9.2617C20.1848 9.55191 20.1848 10.0106 19.9062 10.3008L15.291 15.1094C15.0042 15.4082 14.5293 15.4177 14.2305 15.1308C13.9319 14.844 13.9222 14.369 14.209 14.0703L18.3262 9.78123L14.209 5.49217C13.9222 5.19338 13.9317 4.71846 14.2305 4.43162Z"
              fill="#F2F2F2"
              className="group-hover:fill-background"
            />
          </svg>
        )}
      </Button>
    </div>
  );
}
