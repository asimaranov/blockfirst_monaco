import { cn } from '~/helpers';
import { motion, AnimatePresence } from 'motion/react';
import ToggleMinus from '../shared/ToggleMinus/ToggleMinus';

interface SectionProps {
  title: string;
  status?: 'coming_soon' | 'in_progress' | 'completed';
  tags: string[];
  isExpanded: boolean;
  onToggle: () => void;
  children: React.ReactNode;
}

export function Section({
  title,
  status,
  tags,
  isExpanded,
  onToggle,
  children,
}: SectionProps) {
  return (
    <div
      className={cn(
        'border-accent flex w-full flex-col border-b last:border-b-0',
        !isExpanded && 'border-b-0'
      )}
      key={title}
    >
      <div
        className={cn(
          'border-accent flex items-center justify-between border-b px-5 py-5 sm:px-8',
          status !== 'coming_soon' ? 'cursor-pointer hover:bg-[#14171C] group' : 'cursor-default'
        )}
        onClick={onToggle}
      >
        <div className="flex flex-col gap-3">
          <div className="flex items-center gap-3">
            <h1 className="text-foreground font-base font-delight sm:text-xl">
              {title}
            </h1>
            {status === 'coming_soon' && (
              <svg
                width="96"
                height="24"
                viewBox="0 0 96 24"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
                className="h-6 w-24"
              >
                <rect
                  x="0.25"
                  y="0.25"
                  width="95.5"
                  height="23.5"
                  rx="11.75"
                  stroke="url(#paint0_linear_1131_36236)"
                  stroke-opacity="0.5"
                  stroke-width="0.5"
                />
                <path
                  d="M12.36 11.716C12.36 8.992 13.956 7.276 16.356 7.276C18.396 7.276 19.848 8.464 20.244 10.456H19.14C18.792 9.052 17.772 8.236 16.344 8.236C14.604 8.236 13.44 9.568 13.44 11.716C13.44 13.852 14.604 15.184 16.356 15.184C17.844 15.184 18.888 14.272 19.188 12.748H20.292C19.968 14.872 18.492 16.144 16.356 16.144C13.956 16.144 12.36 14.44 12.36 11.716ZM22.0644 12.76C22.0644 14.224 22.8444 15.208 24.1524 15.208C25.4604 15.208 26.2284 14.224 26.2284 12.76C26.2284 11.308 25.4604 10.324 24.1524 10.324C22.8444 10.324 22.0644 11.308 22.0644 12.76ZM21.0084 12.76C21.0084 10.756 22.2564 9.388 24.1524 9.388C26.0484 9.388 27.2844 10.756 27.2844 12.76C27.2844 14.764 26.0484 16.144 24.1524 16.144C22.2564 16.144 21.0084 14.764 21.0084 12.76ZM28.1965 16V9.532H29.1325L29.1685 10.684C29.4805 9.868 30.2125 9.388 31.1725 9.388C32.1805 9.388 32.9005 9.904 33.2125 10.768C33.5125 9.904 34.2685 9.388 35.2885 9.388C36.6685 9.388 37.5325 10.324 37.5325 11.836V16H36.5005V12.22C36.5005 10.972 36.0325 10.324 35.0845 10.324C34.0645 10.324 33.3805 11.08 33.3805 12.22V16H32.3485V12.22C32.3485 10.972 31.8805 10.324 30.9325 10.324C29.9125 10.324 29.2285 11.08 29.2285 12.22V16H28.1965ZM38.6391 16V9.532H39.6471V16H38.6391ZM38.5911 8.584V7.264H39.6951V8.584H38.5911ZM40.8062 16V9.532H41.7422L41.7782 10.696C42.1142 9.868 42.8822 9.388 43.9022 9.388C45.3422 9.388 46.2302 10.324 46.2302 11.836V16H45.1982V12.22C45.1982 10.972 44.6942 10.324 43.6742 10.324C42.5702 10.324 41.8382 11.08 41.8382 12.22V16H40.8062ZM48.1504 12.592C48.1504 14.032 48.8464 14.848 50.0944 14.848C51.3664 14.848 52.1344 14.008 52.1344 12.592C52.1344 11.188 51.3664 10.324 50.0944 10.324C48.8464 10.324 48.1504 11.14 48.1504 12.592ZM47.3344 15.976H48.3904C48.4744 16.924 49.3144 17.38 50.2504 17.38C51.2704 17.38 52.1104 16.828 52.1104 15.328V14.608C51.7144 15.364 50.8864 15.784 49.9264 15.784C48.2344 15.784 47.0944 14.488 47.0944 12.58C47.0944 10.672 48.2344 9.388 49.9144 9.388C50.8864 9.388 51.7864 9.808 52.1704 10.636L52.2064 9.532H53.1424V15.328C53.1424 17.452 51.8704 18.316 50.2384 18.316C48.7384 18.316 47.4784 17.584 47.3344 15.976ZM56.2079 13.036H57.2759C57.4199 14.392 58.3319 15.184 59.8199 15.184C61.0919 15.184 61.8719 14.608 61.8719 13.684C61.8719 12.58 60.8039 12.352 59.4359 12.076C57.9719 11.788 56.4119 11.44 56.4119 9.724C56.4119 8.248 57.5519 7.276 59.4119 7.276C61.4639 7.276 62.6639 8.536 62.7959 10.18H61.7159C61.5959 9.088 60.7799 8.236 59.3879 8.236C58.2599 8.236 57.4919 8.836 57.4919 9.688C57.4919 10.708 58.6199 10.936 59.8559 11.188C61.4399 11.5 62.9519 11.848 62.9519 13.612C62.9519 15.208 61.6319 16.144 59.7959 16.144C57.6239 16.144 56.2919 14.848 56.2079 13.036ZM64.6738 12.76C64.6738 14.224 65.4538 15.208 66.7618 15.208C68.0698 15.208 68.8378 14.224 68.8378 12.76C68.8378 11.308 68.0698 10.324 66.7618 10.324C65.4538 10.324 64.6738 11.308 64.6738 12.76ZM63.6178 12.76C63.6178 10.756 64.8658 9.388 66.7618 9.388C68.6578 9.388 69.8938 10.756 69.8938 12.76C69.8938 14.764 68.6578 16.144 66.7618 16.144C64.8658 16.144 63.6178 14.764 63.6178 12.76ZM71.6699 12.76C71.6699 14.224 72.4499 15.208 73.7579 15.208C75.0659 15.208 75.8339 14.224 75.8339 12.76C75.8339 11.308 75.0659 10.324 73.7579 10.324C72.4499 10.324 71.6699 11.308 71.6699 12.76ZM70.6139 12.76C70.6139 10.756 71.8619 9.388 73.7579 9.388C75.6539 9.388 76.8899 10.756 76.8899 12.76C76.8899 14.764 75.6539 16.144 73.7579 16.144C71.8619 16.144 70.6139 14.764 70.6139 12.76ZM77.814 16V9.532H78.75L78.786 10.696C79.122 9.868 79.89 9.388 80.91 9.388C82.35 9.388 83.238 10.324 83.238 11.836V16H82.206V12.22C82.206 10.972 81.702 10.324 80.682 10.324C79.578 10.324 78.846 11.08 78.846 12.22V16H77.814Z"
                  fill="url(#paint1_linear_1131_36236)"
                />
                <defs>
                  <linearGradient
                    id="paint0_linear_1131_36236"
                    x1="7.64602"
                    y1="35.0769"
                    x2="101.64"
                    y2="-10.198"
                    gradientUnits="userSpaceOnUse"
                  >
                    <stop stop-color="#F46919" />
                    <stop offset="1" stop-color="#F419AB" />
                  </linearGradient>
                  <linearGradient
                    id="paint1_linear_1131_36236"
                    x1="17.7345"
                    y1="25.9231"
                    x2="82.8355"
                    y2="-11.7064"
                    gradientUnits="userSpaceOnUse"
                  >
                    <stop stop-color="#F46919" />
                    <stop offset="1" stop-color="#F419AB" />
                  </linearGradient>
                </defs>
              </svg>
            )}
            {status === 'in_progress' && (
              <div className="font-delight rounded-full border-[0.5px] border-[#33CF8E]/50 px-3 py-1 text-xs whitespace-nowrap text-[#33CF8E]">
                In Progress
              </div>
            )}
            {status === 'completed' && (
              <div className="rounded-full border-[0.5px] border-[#9AA6B5]/50 px-3 py-1 text-xs text-[#9AA6B5]/50">
                Completed
              </div>
            )}
          </div>
          <div className="text-secondary flex items-center gap-2 text-xs opacity-50">
            {tags.map((tag, index) => (
              <div
                key={`div-${index}`}
                className="flex flex-row items-center justify-center gap-2"
              >
                {index > 0 && (
                  <div className="bg-secondary h-1 w-1 rounded-full" />
                )}
                <span>{tag}</span>
              </div>
            ))}
          </div>
        </div>

        {status === 'coming_soon' ? (
          <div className="flex h-10 w-10 items-center justify-center">
            <svg
              width="20"
              height="20"
              viewBox="0 0 20 20"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
              className="h-5 w-5"
            >
              <g opacity="0.5">
                <path
                  d="M10.001 13.9005C10.6575 13.9005 11.1896 13.3684 11.1896 12.712C11.1896 12.0556 10.6575 11.5234 10.001 11.5234C9.34463 11.5234 8.8125 12.0556 8.8125 12.712C8.8125 13.3684 9.34463 13.9005 10.001 13.9005Z"
                  fill="#9AA6B5"
                />
                <path
                  d="M14.574 8.19961V7.28815C14.574 5.3194 14.1 2.70898 9.99479 2.70898C5.88958 2.70898 5.41562 5.3194 5.41562 7.28815V8.19961C3.37396 8.45482 2.70312 9.49023 2.70312 12.035V13.3913C2.70312 16.3809 3.61458 17.2923 6.60417 17.2923H13.3854C16.375 17.2923 17.2865 16.3809 17.2865 13.3913V12.035C17.2865 9.49023 16.6156 8.45482 14.574 8.19961ZM9.99479 14.9152C8.77708 14.9152 7.79271 13.9236 7.79271 12.7132C7.79271 11.4954 8.78437 10.5111 9.99479 10.5111C11.2052 10.5111 12.1969 11.5027 12.1969 12.7132C12.1969 13.9309 11.2125 14.9152 9.99479 14.9152ZM6.60417 8.13398C6.54583 8.13398 6.49479 8.13398 6.43646 8.13398V7.28815C6.43646 5.15169 7.04167 3.72982 9.99479 3.72982C12.9479 3.72982 13.5531 5.15169 13.5531 7.28815V8.14128C13.4948 8.14128 13.4437 8.14128 13.3854 8.14128H6.60417V8.13398Z"
                  fill="#9AA6B5"
                />
              </g>
            </svg>
          </div>
        ) : (
          <ToggleMinus
            isExpanded={isExpanded}
            onToggle={onToggle}
            className="h-10 w-10 group-hover:opacity-70"
          />
        )}
      </div>
      <AnimatePresence initial={false}>
        {isExpanded && (
          <motion.div
            initial={{ height: 0 }}
            animate={{
              height: 'auto',
              transition: {
                height: {
                  duration: 0.4,
                  ease: 'easeInOut',
                },
              },
            }}
            exit={{
              height: 0,
              transition: {
                height: {
                  duration: 0.4,
                  ease: 'easeInOut',
                },
              },
            }}
            className="overflow-hidden"
          >
            {children}
          </motion.div>
        )}
      </AnimatePresence>
    </div>
  );
}
